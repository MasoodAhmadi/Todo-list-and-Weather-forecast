{"ast":null,"code":"var _jsxFileName = \"/home/masood/Desktop/ONLY PRACTICE/Todo-list-and-Weather-forecast/frontend/src/Components/02_todoApp/01_FirstPage.js\";\nimport React from \"react\";\nimport OrganizerItems from \"./02_OrganizerItems\";\nimport SearchBox from \"../Reusable_Component/01_Search/Search\"; //import Weather from \"./04_Weather\";\n\nimport styled from \"../styles\";\n\nclass FirstPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = event => {\n      this.setState({\n        InitialInput: {\n          text: event.target.value,\n          id: Date.now()\n        }\n      });\n    };\n\n    this.onSearch = e => {\n      this.setState({\n        searchTodo: e.target.value\n      });\n    };\n\n    this.getWeather = async () => {\n      const response = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=tampere&appid=034e4c1a00d9f959337a5f7b1cccd8eb\");\n      const data = await response.json();\n      const {\n        name,\n        main,\n        sys,\n        weather,\n        wind\n      } = data;\n      console.log(sys);\n      this.setState({\n        city: name,\n        combine: main,\n        country: sys,\n        Weather: weather,\n        Wind: wind\n      });\n    };\n\n    this.state = {\n      time: new Date(),\n      items: [],\n      city: [],\n      combine: [],\n      country: [],\n      Weather: [],\n      Wind: [],\n      InitialInput: {\n        text: \"\",\n        id: \"\"\n      },\n      searchTodo: \"\",\n      currentPage: 1,\n      pageSize: 5\n    };\n    this.onTextChange = this.onTextChange.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onDeleteItem = this.onDeleteItem.bind(this);\n    this.UpdateItem = this.UpdateItem.bind(this);\n    this.getWeather = this.getWeather.bind(this);\n  } //function that changes from duration\n\n\n  currentTime() {\n    this.setState({\n      time: new Date()\n    });\n  } //editing the text\n\n\n  //adding element inside the todo list\n  addItem(e) {\n    e.preventDefault();\n    const addnewItem = this.state.InitialInput;\n\n    if (addnewItem.text !== \"\") {\n      const addnewItems = [...this.state.items, addnewItem];\n      this.setState({\n        items: addnewItems,\n        InitialInput: {\n          text: \"\",\n          id: \"\"\n        }\n      });\n    }\n  } //to delete the Fields\n\n\n  onDeleteItem(id) {\n    const filteredItems = this.state.items.filter(item => item.id !== id);\n    this.setState({\n      items: filteredItems\n    });\n  } //Editing input Fields\n\n\n  UpdateItem(text, id) {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.id === id) {\n        item.text = text;\n      }\n\n      return null;\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  //rendering the components\n  componentDidMount() {\n    setInterval(() => this.currentTime(), 1000);\n    this.getWeather();\n  }\n\n  render() {\n    //defined the state here\n    const {\n      city,\n      combine,\n      country,\n      Weather,\n      Wind,\n      items,\n      searchTodo,\n      InitialInput\n    } = this.state; //convert kalven to degree\n\n    const Temp = Math.round(combine.temp - 273);\n    const Feels = Math.round(combine.feels_like - 273); //search todo items from the array\n\n    const isTodoDefined = Array.isArray(items);\n    let filteredUser;\n\n    if (isTodoDefined) {\n      filteredUser = items.filter(filtering => filtering.text.toLowerCase().includes(searchTodo.toLowerCase()));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.rowlist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.head,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: styled.h1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"ToDo List\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: styled.Inp,\n      type: \"text\",\n      value: InitialInput.text || \"\",\n      onChange: this.onTextChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: styled.btn,\n      onClick: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, \"ADD\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchBox, {\n      placeholder: \"Search todo ....\",\n      handleChange: e => this.setState({\n        searchTodo: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    })), isTodoDefined ? /*#__PURE__*/React.createElement(OrganizerItems, {\n      items: filteredUser,\n      onDeleteItem: this.onDeleteItem,\n      UpdateItem: this.UpdateItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \"Error: todo not defined \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.rowlist1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.widget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, this.state.time.toLocaleTimeString()), /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, \"city: \", city, \", country:\", country.country), /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.temperature,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, Temp, \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.summary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: styled.summaryText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, \" \", Weather.map((desc, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 28\n        }\n      }, desc.description, \" \");\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.precipitation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, \"Feels like: \", Feels, \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: styled.wind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \" Wind speed: \", Wind.speed)))));\n  }\n\n}\n\nexport default FirstPage;","map":{"version":3,"sources":["/home/masood/Desktop/ONLY PRACTICE/Todo-list-and-Weather-forecast/frontend/src/Components/02_todoApp/01_FirstPage.js"],"names":["React","OrganizerItems","SearchBox","styled","FirstPage","Component","constructor","props","onTextChange","event","setState","InitialInput","text","target","value","id","Date","now","onSearch","e","searchTodo","getWeather","response","fetch","data","json","name","main","sys","weather","wind","console","log","city","combine","country","Weather","Wind","state","time","items","currentPage","pageSize","bind","addItem","onDeleteItem","UpdateItem","currentTime","preventDefault","addnewItem","addnewItems","filteredItems","filter","item","map","componentDidMount","setInterval","render","Temp","Math","round","temp","Feels","feels_like","isTodoDefined","Array","isArray","filteredUser","filtering","toLowerCase","includes","rowlist","head","h1","Inp","btn","rowlist1","widget","details","date","toLocaleTimeString","temperature","summary","summaryText","desc","index","description","precipitation","speed"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport OrganizerItems from \"./02_OrganizerItems\";\nimport SearchBox from \"../Reusable_Component/01_Search/Search\";\n//import Weather from \"./04_Weather\";\nimport styled from \"../styles\";\n\nclass FirstPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date(),\n      items: [],\n      city: [],\n      combine: [],\n      country: [],\n      Weather: [],\n      Wind: [],\n      InitialInput: {\n        text: \"\",\n        id: \"\",\n      },\n      searchTodo: \"\",\n      currentPage: 1,\n      pageSize: 5,\n    };\n    this.onTextChange = this.onTextChange.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onDeleteItem = this.onDeleteItem.bind(this);\n    this.UpdateItem = this.UpdateItem.bind(this);\n    this.getWeather = this.getWeather.bind(this);\n  }\n\n  //function that changes from duration\n  currentTime() {\n    this.setState({\n      time: new Date(),\n    });\n  }\n  //editing the text\n  onTextChange = (event) => {\n    this.setState({\n      InitialInput: { text: event.target.value, id: Date.now() },\n    });\n  };\n\n  //Search input\n  onSearch = (e) => {\n    this.setState({ searchTodo: e.target.value });\n  };\n\n  //adding element inside the todo list\n  addItem(e) {\n    e.preventDefault();\n    const addnewItem = this.state.InitialInput;\n    if (addnewItem.text !== \"\") {\n      const addnewItems = [...this.state.items, addnewItem];\n      this.setState({\n        items: addnewItems,\n        InitialInput: { text: \"\", id: \"\" },\n      });\n    }\n  }\n  //to delete the Fields\n  onDeleteItem(id) {\n    const filteredItems = this.state.items.filter((item) => item.id !== id);\n    this.setState({ items: filteredItems });\n  }\n\n  //Editing input Fields\n  UpdateItem(text, id) {\n    const items = this.state.items;\n    items.map((item) => {\n      if (item.id === id) {\n        item.text = text;\n      }\n      return null;\n    });\n    this.setState({ items: items });\n  }\n\n  getWeather = async () => {\n    const response = await fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=tampere&appid=034e4c1a00d9f959337a5f7b1cccd8eb\"\n    );\n    const data = await response.json();\n    const { name, main, sys, weather, wind } = data;\n    console.log(sys);\n\n    this.setState({\n      city: name,\n      combine: main,\n      country: sys,\n      Weather: weather,\n      Wind: wind,\n    });\n  };\n\n  //rendering the components\n  componentDidMount() {\n    setInterval(() => this.currentTime(), 1000);\n    this.getWeather();\n  }\n\n  render() {\n    //defined the state here\n    const {\n      city,\n      combine,\n      country,\n      Weather,\n      Wind,\n      items,\n      searchTodo,\n      InitialInput,\n    } = this.state;\n\n    //convert kalven to degree\n    const Temp = Math.round(combine.temp - 273);\n    const Feels = Math.round(combine.feels_like - 273);\n\n    //search todo items from the array\n    const isTodoDefined = Array.isArray(items);\n    let filteredUser;\n    if (isTodoDefined) {\n      filteredUser = items.filter((filtering) =>\n        filtering.text.toLowerCase().includes(searchTodo.toLowerCase())\n      );\n    }\n    return (\n      <div>\n        <div style={styled.rowlist}>\n          <div style={styled.head}>\n            <h1 style={styled.h1}>ToDo List</h1>\n          </div>\n          <div>\n            <input\n              style={styled.Inp}\n              type=\"text\"\n              value={InitialInput.text || \"\"}\n              onChange={this.onTextChange}\n            />\n\n            <button style={styled.btn} onClick={this.addItem}>\n              ADD\n            </button>\n          </div>\n          <div>\n            <SearchBox\n              placeholder=\"Search todo ....\"\n              handleChange={(e) =>\n                this.setState({ searchTodo: e.target.value })\n              }\n            />\n          </div>\n          {isTodoDefined ? (\n            <OrganizerItems\n              items={filteredUser}\n              onDeleteItem={this.onDeleteItem}\n              UpdateItem={this.UpdateItem}\n            />\n          ) : (\n            <div>Error: todo not defined </div>\n          )}\n          <br />\n        </div>\n        <div style={styled.rowlist1}>\n          <div style={styled.widget}>\n            <div style={styled.details}>\n              <div style={styled.date}>\n                {this.state.time.toLocaleTimeString()}\n              </div>\n              <div style={styled.city}>\n                city: {city}, country:{country.country}\n              </div>\n              <div style={styled.temperature}>{Temp}&deg;</div>\n              <div style={styled.summary}>\n                <p style={styled.summaryText}>\n                  {\" \"}\n                  {Weather.map((desc, index) => {\n                    return <p key={index}>{desc.description} </p>;\n                  })}\n                </p>\n              </div>\n              <div style={styled.precipitation}>Feels like: {Feels}&deg;</div>\n              <div style={styled.wind}> Wind speed: {Wind.speed}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default FirstPage;\n"]},"metadata":{},"sourceType":"module"}