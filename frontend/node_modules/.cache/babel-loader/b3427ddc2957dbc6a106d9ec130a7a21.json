{"ast":null,"code":"var _jsxFileName = \"/home/masood/Desktop/ONLY PRACTICE/Todo-list-and-Weather-forecast/frontend/src/Components/02_todoApp/02_OrganizerItems.js\";\nimport React from \"react\";\nimport Pagination from \"../03_Pagination/Pagination\";\nimport { paginate } from \"../Reusable_Component/02_Pagination/paginate\";\nimport TodoItem from \"./03_ItemList\";\n\nclass OrganizerItems extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      pageSize: 5\n    };\n  } //method to change pages if goes more then 5 item\n\n\n  render() {\n    const {\n      length: count\n    } = this.props.items;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }));\n    const items = paginate(this.props.items, this.state.currentPage, this.state.pageSize);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, items.map(item => {\n      return /*#__PURE__*/React.createElement(TodoItem, {\n        key: item.id,\n        item: item,\n        onDeleteItem: this.props.onDeleteItem,\n        UpdateItem: this.props.UpdateItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: this.props.items.length,\n      pageSize: this.state.pageSize,\n      onPageChange: this.handlePageChange,\n      currentPage: this.state.currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default OrganizerItems;","map":{"version":3,"sources":["/home/masood/Desktop/ONLY PRACTICE/Todo-list-and-Weather-forecast/frontend/src/Components/02_todoApp/02_OrganizerItems.js"],"names":["React","Pagination","paginate","TodoItem","OrganizerItems","Component","constructor","handlePageChange","page","setState","currentPage","state","pageSize","render","length","count","props","items","map","item","id","onDeleteItem","UpdateItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,QAAT,QAAyB,8CAAzB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,gBATc,GASMC,IAAD,IAAU;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF;AAAf,OAAd;AACD,KAXa;;AAEZ,SAAKG,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE,CADF;AAEXE,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID,GAP0C,CAS3C;;;AAIAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAM,EAAEC;AAAV,QAAoB,KAAKC,KAAL,CAAWC,KAArC;AACA,QAAIF,KAAK,KAAK,CAAd,EACE,oBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKF,UAAME,KAAK,GAAGf,QAAQ,CACpB,KAAKc,KAAL,CAAWC,KADS,EAEpB,KAAKN,KAAL,CAAWD,WAFS,EAGpB,KAAKC,KAAL,CAAWC,QAHS,CAAtB;AAKA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGK,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AACnB,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,QAAA,IAAI,EAAED,IAFR;AAGE,QAAA,YAAY,EAAE,KAAKH,KAAL,CAAWK,YAH3B;AAIE,QAAA,UAAU,EAAE,KAAKL,KAAL,CAAWM,UAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CAJH,CADF,CADF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eAmBE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBH,MAD/B;AAEE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,QAFvB;AAGE,MAAA,YAAY,EAAE,KAAKL,gBAHrB;AAIE,MAAA,WAAW,EAAE,KAAKI,KAAL,CAAWD,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADF;AA4BD;;AAtD0C;;AAwD7C,eAAeN,cAAf","sourcesContent":["import React from \"react\";\nimport Pagination from \"../03_Pagination/Pagination\";\nimport { paginate } from \"../Reusable_Component/02_Pagination/paginate\";\nimport TodoItem from \"./03_ItemList\";\n\nclass OrganizerItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      pageSize: 5,\n    };\n  }\n\n  //method to change pages if goes more then 5 item\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  render() {\n    const { length: count } = this.props.items;\n    if (count === 0)\n      return (\n        <div className=\"\">\n          <p></p>\n        </div>\n      );\n    const items = paginate(\n      this.props.items,\n      this.state.currentPage,\n      this.state.pageSize\n    );\n    return (\n      <div>\n        <div>\n          <thead>\n            {/*  <tr>\n              <th>Todo item list: {count}.</th>\n            </tr> */}\n            {items.map((item) => {\n              return (\n                <TodoItem\n                  key={item.id}\n                  item={item}\n                  onDeleteItem={this.props.onDeleteItem}\n                  UpdateItem={this.props.UpdateItem}\n                />\n              );\n            })}\n          </thead>\n        </div>\n        <br />\n        <Pagination\n          itemsCount={this.props.items.length}\n          pageSize={this.state.pageSize}\n          onPageChange={this.handlePageChange}\n          currentPage={this.state.currentPage}\n        />\n      </div>\n    );\n  }\n}\nexport default OrganizerItems;\n"]},"metadata":{},"sourceType":"module"}